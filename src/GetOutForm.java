
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author danu
 */
public class GetOutForm extends javax.swing.JFrame {

    /**
     * Creates new form NextForm
     */
    public GetOutForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        ownerNameLbl = new javax.swing.JLabel();
        vehicalTypeLbl = new javax.swing.JLabel();
        timeLbl = new javax.swing.JLabel();
        pressHereTxt = new javax.swing.JButton();
        paymentStatuLbl = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        arrivalTimeLbl = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        departureTimeLbl = new javax.swing.JLabel();
        nextBackBtn = new javax.swing.JButton();
        vhclNmbrTxt = new javax.swing.JTextField();
        clickBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        hourLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(675, 530));

        jPanel1.setBackground(new java.awt.Color(236, 240, 241));

        jPanel2.setBackground(new java.awt.Color(19, 15, 64));

        jLabel1.setBackground(new java.awt.Color(214, 48, 49));
        jLabel1.setFont(new java.awt.Font("Serif", 3, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(214, 48, 49));
        jLabel1.setText("The Sunrise Shopping Complex Parking System");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButton1.setFont(new java.awt.Font("Serif", 1, 13)); // NOI18N
        jButton1.setText("Vehical Type");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Serif", 1, 13)); // NOI18N
        jButton2.setText("Vehical Number");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Serif", 1, 13)); // NOI18N
        jButton3.setText("Owner's Name");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        ownerNameLbl.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        ownerNameLbl.setForeground(new java.awt.Color(208, 22, 22));

        vehicalTypeLbl.setBackground(new java.awt.Color(208, 22, 22));
        vehicalTypeLbl.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        vehicalTypeLbl.setForeground(new java.awt.Color(208, 22, 22));

        timeLbl.setBackground(new java.awt.Color(208, 22, 22));
        timeLbl.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        timeLbl.setForeground(new java.awt.Color(208, 22, 22));

        pressHereTxt.setFont(new java.awt.Font("Serif", 1, 13)); // NOI18N
        pressHereTxt.setText("Press Here to Get Parked Time & Check Whether Payment was Make or Not");
        pressHereTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pressHereTxtActionPerformed(evt);
            }
        });

        paymentStatuLbl.setBackground(new java.awt.Color(208, 22, 22));
        paymentStatuLbl.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        paymentStatuLbl.setForeground(new java.awt.Color(226, 66, 66));

        jButton5.setFont(new java.awt.Font("Serif", 1, 13)); // NOI18N
        jButton5.setText("Arrival Time");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        arrivalTimeLbl.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        arrivalTimeLbl.setForeground(new java.awt.Color(208, 22, 22));

        jButton6.setFont(new java.awt.Font("Serif", 1, 13)); // NOI18N
        jButton6.setText("Departure Time");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        departureTimeLbl.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        departureTimeLbl.setForeground(new java.awt.Color(208, 22, 22));

        nextBackBtn.setFont(new java.awt.Font("Serif", 1, 13)); // NOI18N
        nextBackBtn.setText("Back");
        nextBackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextBackBtnActionPerformed(evt);
            }
        });

        vhclNmbrTxt.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N

        clickBtn.setFont(new java.awt.Font("Serif", 1, 13)); // NOI18N
        clickBtn.setText("Click Here");
        clickBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clickBtnActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Serif", 3, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(21, 21, 33));
        jLabel2.setText("Parked Time");

        hourLbl.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        hourLbl.setForeground(new java.awt.Color(208, 22, 22));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(nextBackBtn)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton2)
                                    .addComponent(jButton3)
                                    .addComponent(jButton5)
                                    .addComponent(jButton6)
                                    .addComponent(jButton1))
                                .addGap(62, 62, 62)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(arrivalTimeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ownerNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(vehicalTypeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(vhclNmbrTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(32, 32, 32)
                                        .addComponent(clickBtn))
                                    .addComponent(departureTimeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addGap(51, 51, 51)
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(timeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(hourLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(paymentStatuLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addGap(37, 37, 37)
                                    .addComponent(pressHereTxt))))
                        .addGap(20, 20, 20)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(vhclNmbrTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clickBtn))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(vehicalTypeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ownerNameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(arrivalTimeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton6)
                    .addComponent(departureTimeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(pressHereTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(paymentStatuLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nextBackBtn))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(timeLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(hourLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void pressHereTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pressHereTxtActionPerformed
        double departureTime = Double.parseDouble(departureTimeLbl.getText());
        double arrivalTime = Double.parseDouble(arrivalTimeLbl.getText());
        
        double parkedTime = departureTime - arrivalTime;
        
        String s = Double.toString(Math.round(parkedTime*100)/100);
        timeLbl.setText(s);
        
        hourLbl.setText("hr");
        
        try {
            ParkingDetailsModule parkingDetailsModule = VehicalController.serchPayment(vhclNmbrTxt.getText());
            if(parkingDetailsModule!=null){
                paymentStatuLbl.setText("Payment Created");
            }else{
                JOptionPane.showMessageDialog(this, "Payment Already Not Created");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Vehical Not Exit Yet");
            
        } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "Driver not found...");
        }
        
        String vehicalType = vehicalTypeLbl.getText();
        int carSlot, vanSlot, busSlot, lorrySlot;
        
        if("Car".equals(vehicalType)){
            try {
                ArrayList<SlotsModule>slotsList= VehicalController.getAllItem();
                for (SlotsModule slots : slotsList) {
                    carSlot = slots.getCar();
                    carSlot = carSlot + 1;
                    try {
                    SlotsModule slot = new SlotsModule(1,carSlot, 0,0,0);
                    boolean isUpdated = VehicalController.updateCarSlots(slot);
                    if (isUpdated) {
                       // JOptionPane.showMessageDialog(this, "Update Success");
                        
                    } else {
                        JOptionPane.showMessageDialog(this, "Update Fail");
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                } catch (ClassNotFoundException ex) {
                    JOptionPane.showMessageDialog(this, "Driver not found...");
                } 
                    
                }   
            } catch (SQLException ex) {
                Logger.getLogger(ParkRejisterForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ParkRejisterForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
         if("Van".equals(vehicalType)){
            try {
                ArrayList<SlotsModule>slotsList= VehicalController.getAllItem();
                for (SlotsModule slots : slotsList) {
                    vanSlot = slots.getVan();
                    vanSlot = vanSlot + 1;
                    try {
                        SlotsModule slot = new SlotsModule(1,0, vanSlot,0,0);
                        boolean isUpdated = VehicalController.updateVanSlots(slot);
                        if (isUpdated) {
                           // JOptionPane.showMessageDialog(this, "Update Success");

                        } else {
                            JOptionPane.showMessageDialog(this, "Update Fail");
                        }
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage());
                    } catch (ClassNotFoundException ex) {
                        JOptionPane.showMessageDialog(this, "Driver not found...");
                    } 
                    
                }   
            } catch (SQLException ex) {
                Logger.getLogger(ParkRejisterForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ParkRejisterForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        if("Bus".equals(vehicalType)){
            try {
                ArrayList<SlotsModule>slotsList= VehicalController.getAllItem();
                for (SlotsModule slots : slotsList) {
                    busSlot = slots.getBus();
                    busSlot = busSlot + 1;
                    try {
                        SlotsModule slot = new SlotsModule(1,0, 0,busSlot,0);
                        boolean isUpdated = VehicalController.updateBusSlots(slot);
                        if (isUpdated) {
                           // JOptionPane.showMessageDialog(this, "Update Success");

                        } else {
                            JOptionPane.showMessageDialog(this, "Update Fail");
                        }
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage());
                    } catch (ClassNotFoundException ex) {
                        JOptionPane.showMessageDialog(this, "Driver not found...");
                    } 
                }   
                } catch (SQLException ex) {
                    Logger.getLogger(ParkRejisterForm.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(ParkRejisterForm.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
        
        if("Lorry".equals(vehicalType)){
            try {
                ArrayList<SlotsModule>slotsList= VehicalController.getAllItem();
                for (SlotsModule slots : slotsList) {
                    lorrySlot = slots.getLorry();
                    lorrySlot = lorrySlot + 1;
                    try {
                        SlotsModule slot = new SlotsModule(1,0, 0,0,lorrySlot);
                        boolean isUpdated = VehicalController.updateLorrySlots(slot);
                        if (isUpdated) {
                           // JOptionPane.showMessageDialog(this, "Update Success");

                        } else {
                            JOptionPane.showMessageDialog(this, "Update Fail");
                        }
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage());
                    } catch (ClassNotFoundException ex) {
                        JOptionPane.showMessageDialog(this, "Driver not found...");
                    } 
                }   
            } catch (SQLException ex) {
                Logger.getLogger(ParkRejisterForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ParkRejisterForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
 
        
        
    }//GEN-LAST:event_pressHereTxtActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void nextBackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextBackBtnActionPerformed
        dispose();
        new SecurityForm().setVisible(true);
    }//GEN-LAST:event_nextBackBtnActionPerformed

    private void clickBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clickBtnActionPerformed
        try {
            VehicalModule vehicalModule = VehicalController.searchDetails(vhclNmbrTxt.getText());
            ParkingDetailsModule parkingModule = VehicalController.searchParkingDetails(vhclNmbrTxt.getText());
            if(vehicalModule!=null){
                vehicalTypeLbl.setText(vehicalModule.getVehicalType());
                ownerNameLbl.setText(vehicalModule.getOwnerName());
                
            }else{
                JOptionPane.showMessageDialog(this, "Vehical not found...");
            }
            
            if(parkingModule!=null){
                arrivalTimeLbl.setText(parkingModule.getArrivalTime());
                departureTimeLbl.setText(parkingModule.getDepartureTime());
                
            }else{
                JOptionPane.showMessageDialog(this, "Vehical not found...");
            }
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(this, "Driver not found...");
        }
    }//GEN-LAST:event_clickBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GetOutForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GetOutForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GetOutForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GetOutForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GetOutForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel arrivalTimeLbl;
    private javax.swing.JButton clickBtn;
    private javax.swing.JLabel departureTimeLbl;
    private javax.swing.JLabel hourLbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton nextBackBtn;
    private javax.swing.JLabel ownerNameLbl;
    private javax.swing.JLabel paymentStatuLbl;
    private javax.swing.JButton pressHereTxt;
    private javax.swing.JLabel timeLbl;
    private javax.swing.JLabel vehicalTypeLbl;
    private javax.swing.JTextField vhclNmbrTxt;
    // End of variables declaration//GEN-END:variables
}


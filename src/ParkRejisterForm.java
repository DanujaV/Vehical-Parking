
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author danu
 */
public class ParkRejisterForm extends javax.swing.JFrame {

    /**
     * Creates new form ParkRejisterForm
     */
    public ParkRejisterForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        arrivalTimeTxt = new javax.swing.JTextField();
        addBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        vehicalNumberTxt = new javax.swing.JTextField();
        backTxt = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        vehicaTypeCombo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(236, 240, 241));

        jLabel1.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(27, 46, 91));
        jLabel1.setText("Arrival Time");
        jLabel1.setBorder(new javax.swing.border.MatteBorder(null));

        arrivalTimeTxt.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        arrivalTimeTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arrivalTimeTxtActionPerformed(evt);
            }
        });

        addBtn.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        addBtn.setText("Add");
        addBtn.setToolTipText("");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(19, 15, 64));

        jLabel2.setBackground(new java.awt.Color(214, 48, 49));
        jLabel2.setFont(new java.awt.Font("Serif", 3, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(214, 48, 49));
        jLabel2.setText("Park the Vehical");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jLabel2)
                .addContainerGap(194, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel3.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(27, 46, 91));
        jLabel3.setText("Vehical Number");
        jLabel3.setBorder(new javax.swing.border.MatteBorder(null));

        vehicalNumberTxt.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        vehicalNumberTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vehicalNumberTxtActionPerformed(evt);
            }
        });

        backTxt.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        backTxt.setText("Back");
        backTxt.setToolTipText("");
        backTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backTxtActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(27, 46, 91));
        jLabel4.setText("Vehical Type");
        jLabel4.setBorder(new javax.swing.border.MatteBorder(null));

        vehicaTypeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Car", "Van", "Bus", "Lorry" }));
        vehicaTypeCombo.setSelectedItem(null);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(backTxt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addBtn)
                        .addGap(12, 12, 12))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(67, 67, 67)
                        .addComponent(arrivalTimeTxt))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(vehicalNumberTxt)
                            .addComponent(vehicaTypeCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vehicaTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vehicalNumberTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arrivalTimeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backTxt)
                    .addComponent(addBtn))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void arrivalTimeTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arrivalTimeTxtActionPerformed
        
    }//GEN-LAST:event_arrivalTimeTxtActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // get the number of vehical's slot and adu karanawa add karana karana parata eken ekak
        String vehicalType = (String) vehicaTypeCombo.getSelectedItem();
        int carSlot, vanSlot, busSlot, lorrySlot;
        
        
        if("Car".equals(vehicalType)){
            try {
                ArrayList<SlotsModule>slotsList= VehicalController.getAllItem();
                for (SlotsModule slots : slotsList) {
                    carSlot = slots.getCar();
                    carSlot = carSlot - 1;
                    try {
                    SlotsModule slot = new SlotsModule(1,carSlot, 0,0,0);
                    boolean isUpdated = VehicalController.updateCarSlots(slot);
                    if (isUpdated) {
                       // JOptionPane.showMessageDialog(this, "Update Success");
                        
                    } else {
                        JOptionPane.showMessageDialog(this, "Update Fail");
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                } catch (ClassNotFoundException ex) {
                    JOptionPane.showMessageDialog(this, "Driver not found...");
                } 
                    
                }   
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(ParkRejisterForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        if("Van".equals(vehicalType)){
            try {
                ArrayList<SlotsModule>slotsList= VehicalController.getAllItem();
                for (SlotsModule slots : slotsList) {
                    vanSlot = slots.getVan();
                    vanSlot = vanSlot - 1;
                    try {
                        SlotsModule slot = new SlotsModule(1,0, vanSlot,0,0);
                        boolean isUpdated = VehicalController.updateVanSlots(slot);
                        if (isUpdated) {
                           // JOptionPane.showMessageDialog(this, "Update Success");

                        } else {
                            JOptionPane.showMessageDialog(this, "Update Fail");
                        }
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage());
                    } catch (ClassNotFoundException ex) {
                        JOptionPane.showMessageDialog(this, "Driver not found...");
                    } 
                    
                }   
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(ParkRejisterForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        if("Bus".equals(vehicalType)){
            try {
                ArrayList<SlotsModule>slotsList= VehicalController.getAllItem();
                for (SlotsModule slots : slotsList) {
                    busSlot = slots.getBus();
                    busSlot = busSlot - 1;
                    try {
                        SlotsModule slot = new SlotsModule(1,0, 0,busSlot,0);
                        boolean isUpdated = VehicalController.updateBusSlots(slot);
                        if (isUpdated) {
                           // JOptionPane.showMessageDialog(this, "Update Success");

                        } else {
                            JOptionPane.showMessageDialog(this, "Update Fail");
                        }
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage());
                    } catch (ClassNotFoundException ex) {
                        JOptionPane.showMessageDialog(this, "Driver not found...");
                    } 
                }   
                } catch (SQLException | ClassNotFoundException ex) {
                    Logger.getLogger(ParkRejisterForm.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
        
        if("Lorry".equals(vehicalType)){
            try {
                ArrayList<SlotsModule>slotsList= VehicalController.getAllItem();
                for (SlotsModule slots : slotsList) {
                    lorrySlot = slots.getLorry();
                    lorrySlot = lorrySlot - 1;
                    try {
                        SlotsModule slot = new SlotsModule(1,0, 0,0,lorrySlot);
                        boolean isUpdated = VehicalController.updateLorrySlots(slot);
                        if (isUpdated) {
                           // JOptionPane.showMessageDialog(this, "Update Success");

                        } else {
                            JOptionPane.showMessageDialog(this, "Update Fail");
                        }
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(this, ex.getMessage());
                    } catch (ClassNotFoundException ex) {
                        JOptionPane.showMessageDialog(this, "Driver not found...");
                    } 
                }   
            } catch (SQLException | ClassNotFoundException ex) {
                Logger.getLogger(ParkRejisterForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        String arrivalTime = arrivalTimeTxt.getText();
        String vehicalNumber = vehicalNumberTxt.getText();
        
        ParkingDetailsModule parkingModule = new ParkingDetailsModule(vehicalNumber, arrivalTime,null, "Not pay yet");
        
        try {
            boolean isAdded = VehicalController.addarrivalTime(parkingModule);
             if (isAdded) {
                JOptionPane.showMessageDialog(this, "Added Success");
                arrivalTimeTxt.setText("");
                vehicalNumberTxt.setText("");
            }
        } catch (SQLException ex) {
            //Logger.getLogger(ParkRejisterForm.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "This Vehical isn't Exists in Vehical Details database or Date you insert is incorrect format\nSo First of All, You Need to Add this Vehical or try again with correct time format");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ParkRejisterForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
       
        
    }//GEN-LAST:event_addBtnActionPerformed

    private void vehicalNumberTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vehicalNumberTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vehicalNumberTxtActionPerformed

    private void backTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backTxtActionPerformed
        dispose();
        new SecurityForm().setVisible(true);
    }//GEN-LAST:event_backTxtActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ParkRejisterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ParkRejisterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ParkRejisterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ParkRejisterForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ParkRejisterForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JTextField arrivalTimeTxt;
    private javax.swing.JButton backTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox<String> vehicaTypeCombo;
    private javax.swing.JTextField vehicalNumberTxt;
    // End of variables declaration//GEN-END:variables
}
